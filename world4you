#!/usr/bin/env python3.7

from World4YouApi import World4YouApi
import getpass
import sys
import argparse


parser = argparse.ArgumentParser(prog='world4you', description='An API for World4You DNS Services')
parser.add_argument('-i', '--interactive', action='store_true',
                    help='Activate interactive mode')
parser.add_argument('-q', '--quiet', action='store_true',
                    help='Do not output log messages')
parser.add_argument('-u', '--username', metavar='username', type=str, required=True,
                    help='Specify the username to be used')
parser.add_argument('-p', '--password', metavar='pwd', type=str,
                    help='Specify the password to be used')
parser.add_argument('-P', '--password-file', metavar='file', type=str,
                    help='Specify the password file to be read the password from')
parser.add_argument('action', metavar='action', type=str, nargs='?',
                    choices=['add', 'update', 'alter', 'delete', 'table', 'csv'],
                    help='The action to be performed')
parser.add_argument('arg', metavar='arg', nargs='*', type=str,
                    help='Args for the specified action')
args = parser.parse_args()

v = 1
if args.quiet:
    v = 0


def info(*args, **kwargs):
    if v > 0:
        print(*args, **kwargs, file=sys.stderr)
        sys.stderr.flush()


def error(*args, **kwargs):
    print(*args, **kwargs, file=sys.stderr)
    sys.stderr.flush()


def add(record_name: str = None, record_type: str = None, record_value: str = None, *args):
    if not record_name or not record_type or not record_value or len(args) != 0:
        error('usage: world4you add <fqdn> <dns-type> <value>')
        return False
    api.add(record_name, record_type, record_value)
    return True


def update(record_name: str = None, record_type: str = None, record_value_old: str = None, record_value_new: str = None, *args):
    if not record_name or not record_type or not record_value_old or not record_value_new or len(args) != 0:
        error('usage: word4you update <fqdn> <dns-type> <old-value> <new-value>')
        return False
    rr = api.resource_record(record_name, record_type, record_value_old)
    if rr is None:
        error('unable to find resource record')
        return False
    api.update(rr, record_value_new)
    return True


def alter(record_name: str = None, record_type_old: str = None, record_value_old: str = None, record_type_new: str = None, record_value_new: str = None, *args):
    if not record_name or not record_type_old or not record_value_old or record_type_new or len(args) != 0:
        error('usage: world4you alter <fqdn> <old-dns-type> <old-value> <new-dns-type> [<new-value>]')
        return False
    rr = api.resource_record(record_name, record_type_old, record_value_old)
    if rr is None:
        error('unable to find resource record')
        return False
    api.alter(rr, record_type_new, record_value_new)
    return True


def delete(record_name: str = None, record_type: str = None, record_value: str = None, *args):
    if not record_name or not record_type or not record_value or len(args) != 0:
        error('usage: world4you delete <fqdn> <dns-type> <value>')
        return False
    rr = api.resource_record(record_name, record_type, record_value)
    if rr is None:
        error('unable to find resource record')
        return False
    api.delete(rr)
    return True


def table(*args):
    if len(args) != 0:
        error('usage: world4you table')
        return False
    print(f'+-{"":-<32s}-+-{"":-<8s}-+-{"":-<64s}-+')
    print(f'| {"Name":^32s} | {"Type":^8s} | {"Value":^64s} |')
    print(f'+-{"":-<32s}-+-{"":-<8s}-+-{"":-<64s}-+')
    for rr_id, rr in api.resource_records.items():
        print(f'| {rr.name:>32s} | {rr.type:^8s} | {rr.value:>64s} |')
    print(f'+-{"":-<32s}-+-{"":-<8s}-+-{"":-<64s}-+')
    return True


def csv(*args):
    if len(args) != 0:
        error('usage: world4you csv')
        return False
    for rr_id, rr in api.resource_records.items():
        print(f'{rr.name:s},{rr.type:s},\"{rr.value:s}\"')
    return True


def interactive():
    while True:
        print('> ', file=sys.stderr, end='')
        line = input()
        args = line.split(' ')
        cmd = args.pop(0)
        try:
            if cmd == 'add':
                add(*args)
            elif cmd == 'update':
                update(*args)
            elif cmd == 'alter':
                alter(*args)
            elif cmd == 'delete':
                delete(*args)
            elif cmd == 'table' or cmd == 'list':
                table(*args)
            elif cmd == 'csv':
                csv(*args)
            elif cmd == 'reload':
                if len(args) != 0:
                    error("usage: world4you reload")
                else:
                    info('Retrieving DNS entries...', end='')
                    api.sync()
                    info('\rSuccessfully retrieved DNS entries')
            elif cmd == 'exit' or cmd == 'quit':
                if len(args) != 0:
                    error("usage: world4you " + cmd)
                error("Goodbye!")
                exit(0)
            elif cmd == 'help':
                if len(args) != 0:
                    error("usage: help")
                else:
                    error("Commands: ")
                    error("  help")
                    error("  list / table")
                    error("  reload")
                    error("  exit / quit")
                    error("  add <fqdn> <dns-type> <value>")
                    error("  update <fqdn> <dns-type> <old-value> <new-value>")
                    error("  alter <fqdn> <old-dns-type> <old-value> <new-dns-type> [<new-value>]")
                    error("  delete <fqdn> <dns-type> <value>")
            else:
                error("unknown action. Type 'help' for help")
        except ConnectionError as e:
            error(str(e))
        except IndexError as e:
            error("unable to find resource record")


if __name__ == '__main__':
    username = args.username
    if args.password:
        password = args.password
    elif args.password_file:
        file = open(args.password_file)
        password = file.readline()
        file.close()
    else:
        password = getpass.getpass('Password: ', stream=sys.stderr)

    api = World4YouApi()

    try:
        info('Logging in...', end='')
        api.login(username, password)
        info('\rSuccessfully logged in')

        info('Retrieving DNS entries...', end='')
        api.sync()
        info('\rSuccessfully retrieved DNS entries')

        info('')
    except ConnectionError as e:
        error(f'\r{e}')
        exit(5)

    try:
        if args.interactive:
            interactive()
        elif args.action == 'add':
            if not add(*args.arg):
                exit(1)
        elif args.action == 'update':
            if not update(*args.arg):
                exit(1)
        elif args.action == 'alter':
            if not alter(*args.arg):
                exit(1)
        elif args.action == 'delete':
            if not delete(*args.arg):
                exit(1)
        elif args.action == 'table':
            if not table(*args.arg):
                exit(1)
        elif args.action == 'csv':
            if not csv(*args.arg):
                exit(1)
        else:
            print("invalid action")
            exit(4)
    except ConnectionError as e:
        error(str(e))
        exit(2)
    except IndexError as e:
        error(str(e))
        exit(3)
    exit(0)



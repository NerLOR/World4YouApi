#!/usr/bin/python3

from World4YouApi import World4YouApi
import getpass
import sys
import argparse


parser = argparse.ArgumentParser(description='An API for World4You DNS Services')
parser.add_argument('-i', '--interactive', action='store_true',
                    help='Activate interactive mode')
parser.add_argument('-u', '--username', metavar='username', type=str, required=True,
                    help='Specify the username to be used')
parser.add_argument('-p', '--password', metavar='pwd', type=str,
                    help='Specify the password to be used')
parser.add_argument('-P', '--password-file', metavar='file', type=str,
                    help='Specify the password file to be read the password from')
parser.add_argument('action', metavar='action', type=str, choices=['add', 'update', 'alter', 'delete'],
                    help='The action to be performed')
parser.add_argument('arg', metavar='arg', nargs='*',
                    help='Args for the specified action')
args = parser.parse_args()


api = World4YouApi()

username = args.username
password = getpass.getpass('Password: ')
print('')

print('Logging in...', end='')
sys.stdout.flush()
api.login(username, password)
print('\rSuccessfully logged in')

print('Retrieving DNS entries...', end='')
sys.stdout.flush()
api.get_resource_records()
print('\rSuccessfully retrieved DNS entries')

print("\nEnter command:")

while True:
    line = input('> ')
    args = line.split(' ')
    cmd = args[0]
    if cmd == 'list':
        if len(args) != 1:
            print("usage: list")
        else:
            print("")
            print("+-{0:-<32s}-+-{0:-<8s}-+-{0:-<64s}-+".format(''))
            print("| {name:^32s} | {type:^8s} | {value:^64s} |".format(name='Name', type='Type', value='Value'))
            print("+-{0:-<32s}-+-{0:-<8s}-+-{0:-<64s}-+".format(''))
            for rr in api.resource_records:
                print("| {name:>32s} | {type:^8s} | {value:>64s} |".
                      format(name=rr['name'], type=rr['type'], value=rr['value']))
            print("+-{0:-<32s}-+-{0:-<8s}-+-{0:-<64s}-+".format(''))
            print("")
    elif cmd == 'reload':
        if len(args) != 1:
            print("usage: reload")
        else:
            print('Retrieving DNS entries...', end='')
            sys.stdout.flush()
            api.get_resource_records()
            print('\rSuccessfully retrieved DNS entries')
    elif cmd == 'delete':
        if len(args) != 2:
            print("usage: delete <fqdn>")
        else:
            print("Deleting " + args[1] + "...", end='')
            sys.stdout.flush()
            try:
                api.delete_resource_record(args[1])
                print("\rSuccessfully deleted " + args[1])
            except IndexError:
                print("\rUnable to delete " + args[1] + ": Resource Record not found")
            except ConnectionError:
                print("\rUnable to delete " + args[1])
    elif cmd == 'add':
        if len(args) != 4:
            print("usage: add <fqdn> <dns-type> <value>")
        else:
            print("Adding " + args[1] + "...", end='')
            sys.stdout.flush()
            try:
                api.add_resource_record(args[1], args[2], args[3])
                print("\rSuccessfully added " + args[1])
            except ConnectionError:
                print("\rUnable to add " + args[1])
    elif cmd == 'update':
        if len(args) != 3:
            print("usage: update <fqdn> <value>")
        else:
            print("Updating " + args[1] + "...", end='')
            sys.stdout.flush()
            try:
                api.update_resource_record(args[1], args[2])
                print("\rSuccessfully updated " + args[1])
            except IndexError:
                print("\rUnable to update " + args[1] + ": Resource Record not found")
            except ConnectionError:
                print("\rUnable to update " + args[1])
    elif cmd == 'alter':
        if len(args) != 4:
            print("usage: alter <fqdn> <dns-type> <value>")
        else:
            print("Altering " + args[1] + "...", end='')
            sys.stdout.flush()
            try:
                api.alter_resource_record(args[1], args[2], args[3])
                print("\rSuccessfully altered " + args[1])
            except IndexError:
                print("\rUnable to alter " + args[1] + ": Resource Record not found")
            except ConnectionError:
                print("\rUnable to alter " + args[1])
    elif cmd == 'exit' or cmd == 'quit':
        if len(args) != 1:
            print("usage: " + cmd)
        else:
            print("Goodbye!")
            exit(0)
    elif cmd == 'help':
        if len(args) != 1:
            print("usage: help")
        else:
            print("Commands: ")
            print("  help")
            print("  list")
            print("  reload")
            print("  exit / quit")
            print("  add <fqdn> <dns-type> <value>")
            print("  update <fqdn> <value>")
            print("  alter <fqdn> <dns-type> <value>")
            print("  delete <fqdn>")
    else:
        print('Invalid command! Try \'help\'')
    print("")

